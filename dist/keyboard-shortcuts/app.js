import{array as S,function as m,number as C,ord as H}from"https://esm.sh/fp-ts";import{mean as P}from"https://esm.sh/fp-ts-std/Array";var g=Spicetify.Mousetrap(),f="abcdefghijklmnopqrstuvwxyz".split(""),w=()=>Array.from(s.getElementsByClassName("sneak-key")),q=e=>e.length===0?!1:(s.remove(),m.pipe(e,S.map(t=>t.remove())),document.body.append(s),!0),L=m.flow(w,q),I=()=>{if(s.style.display="block",L())return;let e=n=>n.checkVisibility({checkOpacity:!0,checkVisibilityCSS:!0}),t=n=>{let l=document.body,p=n.getBoundingClientRect(),u=(c,K)=>E=>E===H.clamp(C.Ord)(c,K)(E);return m.pipe(P([p.top,p.bottom]),u(0,l.clientHeight))&&m.pipe(P([p.left,p.right]),u(0,l.clientWidth))},r=(n,l,p,u)=>{let c=document.createElement("span");return c.classList.add("sneak-key"),c.innerText=l,c.style.top=p+"px",c.style.left=u+"px",c.target=n,c},i=document.createDocumentFragment(),a='.Root__top-container [href]:not(link),.Root__top-container button,.Root__top-container [role="button"]';b=m.pipe(document.querySelectorAll(a),n=>Array.from(n),S.filter(e),S.filter(t),S.reduce([0,0],([n,l],p)=>{let{x:u,y:c}=p.getBoundingClientRect();return i.append(r(p,f[n]+f[l++],c,u)),l>=f.length?[++n,0]:[n,l]}),([n,l])=>n+l>0),b&&s.append(i)},d=()=>{s.style.display="none",L(),y=!1},T=({key:e})=>{if(!y){b&&(b=!1,y=!0);return}let t=w();if(t.length===0)return void d();s.remove(),t.map(r=>{let[i,...a]=r.innerText.toLowerCase();if(i!==e)return void r.remove();a.length===0?(r.target.click(),d()):r.innerText=a.join("")}),document.body.append(s),s.childNodes.length===1&&d()},b=!1,y=!1,s=document.createElement("div");s.id="sneak-overlay";document.body.append(s);import{mod as M}from"https://esm.sh/fp-ts-std/Number";import{function as O}from"https://esm.sh/fp-ts";var j=25,R=()=>document.querySelector(".Root__main-view .os-viewport"),h=e=>{let t=R(),r=setInterval(()=>t.scrollTop+=e*j,10);document.addEventListener("keyup",()=>clearInterval(r))},k=e=>R().scroll(0,e),_=e=>Spicetify.Platform.History.push({pathname:e}),x=e=>{let t=Array.from(Array.from(document.querySelectorAll(".main-yourLibraryX-navLink")).values());O.pipe(document.querySelector(".main-yourLibraryX-navLinkActive"),r=>t.findIndex(i=>i===r),r=>M(t.length)(r===-1&&e<=0?e:r+e),r=>t[r].click())};var o=class{constructor(t,r){this.key=t;this.callback=r}ctrl=!1;shift=!1;alt=!1;setCtrl=t=>(this.ctrl=t,this);setShift=t=>(this.shift=t,this);setAlt=t=>(this.alt=t,this);register=()=>Spicetify.Keyboard.registerShortcut({key:this.key,ctrl:this.ctrl,shift:this.shift,alt:this.alt},t=>void(!y&&this.callback(t)))};import{array as z,function as v}from"https://esm.sh/fp-ts";var Z={before:{start:v.constant({before:"start"}),fromUri:e=>({before:{uri:e}}),fromUid:e=>({before:{uid:e}})},after:{end:v.constant({after:"end"}),fromUri:e=>({after:{uri:e}}),fromUid:e=>({after:{uid:e}})}};var B=e=>Spicetify.Platform.LibraryAPI.contains(...e),A=(e,t)=>Spicetify.Platform.LibraryAPI[t?"add":"remove"](...e),U=async e=>{let t=await B(e);return await v.pipe(e,z.reduceWithIndex([[],[]],(r,i,a)=>(i[Number(t[r])].push(a),i)),([r,i])=>{let a=[];return r.length&&a.push(A(r,!0)),i.length&&a.push(A(i,!1)),Promise.all(a)})};var{KEYS:F}=Spicetify.Keyboard,N=[new o("s",I),new o("s",async()=>{await(Spicetify.Platform.UserAPI._product_state||Spicetify.Platform.UserAPI._product_state_service).putValues({pairs:{"app-developer":"2"}}),Spicetify.Platform.UpdateAPI.applyUpdate()}).setShift(!0),new o("tab",()=>x(1)),new o("tab",()=>x(-1)).setShift(!0),new o("h",Spicetify.Platform.History.goBack).setShift(!0),new o("l",Spicetify.Platform.History.goForward).setShift(!0),new o("j",()=>h(1)),new o("k",()=>h(-1)),new o("g",()=>k(0)),new o("g",()=>k(Number.MAX_SAFE_INTEGER)).setShift(!0),new o("m",()=>U([Spicetify.Player.data.item.uri])),new o("/",e=>{e.preventDefault(),_("/search")})];N.map(e=>e.register());g.bind(f,T,"keypress");g.bind(F.ESCAPE,d);
//! Does location actually point to document.body?
//# sourceMappingURL=data:application/json;base64,
(async () => {
    if (!document.getElementById("keyboard-shortcuts-css")) {
        const el = document.createElement("style")
        el.id = "keyboard-shortcuts-css"
        
        el.textContent = "#sneak-overlay{z-index:100000;position:absolute;width:100%;height:100%;display:none}#sneak-overlay>.sneak-key{position:fixed;padding:3px 6px;background-color:#000;border-radius:3px;border:solid 2px white;color:#fff;text-transform:lowercase;line-height:normal;font-size:14px;font-weight:500}\n/*# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vZXh0ZW5zaW9ucy9rZXlib2FyZC1zaG9ydGN1dHMvYXNzZXRzL3N0eWxlcy5jc3MiXSwKICAic291cmNlc0NvbnRlbnQiOiBbIiNzbmVhay1vdmVybGF5e3otaW5kZXg6MTAwMDAwO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7ZGlzcGxheTpub25lfSNzbmVhay1vdmVybGF5Pi5zbmVhay1rZXl7cG9zaXRpb246Zml4ZWQ7cGFkZGluZzozcHggNnB4O2JhY2tncm91bmQtY29sb3I6YmxhY2s7Ym9yZGVyLXJhZGl1czozcHg7Ym9yZGVyOnNvbGlkIDJweCB3aGl0ZTtjb2xvcjp3aGl0ZTt0ZXh0LXRyYW5zZm9ybTpsb3dlcmNhc2U7bGluZS1oZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjUwMH0iXSwKICAibWFwcGluZ3MiOiAiQUFBQSxDQUFDLGNBQWMsUUFBUSxPQUFPLFNBQVMsU0FBUyxNQUFNLEtBQUssT0FBTyxLQUFLLFFBQVEsSUFBSSxDQUFDLENBQW5GLGFBQWlHLENBQUMsQ0FBQyxVQUFVLFNBQVMsTUFBdkgsUUFBcUksSUFBSSxJQUFJLGlCQUFpQixLQUE5SixjQUFrTCxJQUFJLE9BQU8sTUFBTSxJQUFJLE1BQU0sTUFBTSxLQUFNLGVBQWUsVUFBVSxZQUFZLE9BQU8sVUFBVSxLQUFLLFlBQVksR0FBRyIsCiAgIm5hbWVzIjogW10KfQo= */\n"
        document.head.appendChild(el)
    }
})