/**
 * Utilities to accommodate `fp-ts/Random`.
 *
 * @since 0.12.0
 */
import * as IO from "fp-ts/IO";
type IO<A> = IO.IO<A>;
import { NonEmptyArray } from "fp-ts/NonEmptyArray";
/**
 * Like `fp-ts/Array::randomElem`, but returns the remainder of the array as
 * well.
 *
 * @example
 * import { randomExtract } from 'fp-ts-std/Random'
 *
 * assert.deepStrictEqual(randomExtract(['x'])(), ['x', []])
 *
 * @category 3 Functions
 * @since 0.12.0
 */
export declare const randomExtract: <A>(xs: NonEmptyArray<A>) => IO<[A, A[]]>;
export {};
//# sourceMappingURL=Random.d.ts.map